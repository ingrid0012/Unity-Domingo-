using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class PlayerController : MonoBehaviour
{   
    public enum Weapons //m3l4 
    {
        None,
        Pistol,
        Rifle,
        MiniGun
    }
    Weapons weapons = Weapons.None; 

    [SerializeField] float movementSpeed = 5f; //almacena velocidad pj 
    float currentSpeed;//seguimiento velocidad pj 
    Vector3 direction; //almacena la direcci√≥n del movi pj 
    [SerializeField] Rigidbody rb; //huesitos del pj 

    [SerializeField] float shiftSpeed = 10f;
    [SerializeField] float jumpForce = 7f;
    [SerializeField] float stamina = 5f;

    bool isGrounded = true; 
    [SerializeField] Animator anim; 

    [SerializeField] GameObject pistol, rifle, minigun; 
    bool isPistol, isRifle, isMiniGun; 
    
    void Start()
    {
       rb = GetComponent<Rigidbody>();  //referencia al rb
       currentSpeed = movementSpeed; // el siguimiento de velocidad igual a la velocidad pj 
    }

    // Update is called once per frame
    void Update()
    {
        float moveHorizontal = Input.GetAxis("Horizontal");
        float moveVertical = Input.GetAxis("Vertical");

        direction = new Vector3(moveHorizontal, 0.0f, moveVertical);
        direction = transform.TransformDirection(direction);

        if(direction.x != 0 || direction.z != 0)
        {
            anim.SetBool("Run", true);
        }
        if(direction.x == 0 && direction.z == 0)
        {
            anim.SetBool("Run", false);
        }
        if (Input.GetKeyDown(KeyCode.Space) && isGrounded)
        {
            rb.AddForce(new Vector3(0, jumpForce, 0), ForceMode.Impulse);
            isGrounded = false;
            anim.SetBool("Jump", true);
        }


    }

    void FixedUpdate() //mueve al pj 
    {
        rb.MovePosition(transform.position + direction * currentSpeed * Time.deltaTime);

    }

    void OnCollisionEnter(Collision collision)
    {
        isGrounded = true;
        anim.SetBool("Jump", false);
    }

     public void ChooseWeapon(Weapons weapons) //m3l4
    {
        anim.SetBool("Pistol", weapons == Weapons.Pistol);
        anim.SetBool("Assault", weapons == Weapons.Rifle);
        anim.SetBool("MiniGun", weapons == Weapons.MiniGun);
        anim.SetBool("NoWeapon", weapons == Weapons.None);
        pistol.SetActive(weapons == Weapons.Pistol);
        rifle.SetActive(weapons == Weapons.Rifle);
        miniGun.SetActive(weapons == Weapons.MiniGun);
    }

    private void OnTriggerEnter(Collider other)
    {
        switch(other.gameObject.tag)
        {
        case "pistol":
            if(!isPistol)
            {
                isPistol=true;
                ChooseWeapon(Weapons.Pistol);
            }
            break;
        case "rifle":
            if(!isRifle)
            {
                isRifle=true;
                ChooseWeapon(Weapons.Rifle);
            }
            break;
        case "minigun":
            if(!isMiniGun)
            {
                isMiniGun=true;
                ChooseWeapon(Weapons.MiniGun);
            }
            break;
        default:
            break;
        }
        Destroy(other.gameObject);
    }
}
